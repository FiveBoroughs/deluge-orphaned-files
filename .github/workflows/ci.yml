name: CI & Docker

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint-test:
    name: Lint & test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies & dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt black flake8 pytest

      - name: Black format check (line length 200)
        run: black --check --line-length 200 .

      - name: Flake8 linting (line length 200)
        run: flake8 --max-line-length 200 .

      - name: Run unit tests (skip failure when none collected)
        run: |
          if [ -d "tests" ]; then
            # Run pytest; exit code 5 means "no tests collected" and should not fail the job
            pytest -q || [ $? -eq 5 ]
          else
            echo "No test suite detected; skipping pytest."
          fi

  docker:
    name: Build & push Docker image
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/deluge-orphaned-files:latest
            ghcr.io/${{ github.repository_owner }}/deluge-orphaned-files:${{ github.sha }}
